otelcol.receiver.otlp "main" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }


  output {
    metrics = [otelcol.processor.batch.default.input]
    logs    = [otelcol.processor.batch.default.input]
    traces  = [otelcol.processor.batch.default.input]
  }
}

otelcol.processor.batch "default" {
  output {
    metrics = [
      otelcol.exporter.debug.console.input,
      otelcol.exporter.prometheus.default.input,
    ]
    logs = [
      otelcol.exporter.debug.console.input,
      otelcol.exporter.loki.default.input,
    ]
    traces  = [
      otelcol.exporter.debug.console.input,
      otelcol.exporter.otlp.tempo.input,
    ]
  }

}


otelcol.exporter.debug "console" {
  // verbosity = "detailed"
}

otelcol.exporter.prometheus "default" {
  // This is false by default. It basically takes all the resource attributes
  // and sets them as tags on your metrics. Use with cation as it can become
  // a cardinality hell hole since there is a lot of tags that get added.
  resource_to_telemetry_conversion = false
  forward_to = [prometheus.remote_write.prom.receiver]
}

otelcol.exporter.loki "default" {
  forward_to = [loki.write.default.receiver]
}

prometheus.remote_write "prom" {
  endpoint {
    url = "http://prom:9090/api/v1/write"
  }
}

loki.write "default" {
  endpoint {
    url       = "http://loki-gateway:3100/loki/api/v1/push"
    tenant_id = "tenant1"
  }
  external_labels = {}
}

otelcol.exporter.otlp "tempo" {
    client {
        endpoint = "tempo:4317"
        tls {
            insecure             = true
            insecure_skip_verify = true
        }
    }
}
